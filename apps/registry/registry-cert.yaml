# self signed issuer
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: production
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: oci-registry-cert
  namespace: production
spec:
  secretName: oci-registry-cert
  issuerRef:
    name: selfsigned-issuer
    kind: Issuer
  subject:
    countries:
      - DE
  commonName: docker-auth
  duration: 8760h
  renewBefore: 720h
---
apiVersion: batch/v1
kind: Job
metadata:
  name: transform-cert-secret
  namespace: production
spec:
  template:
    spec:
      serviceAccountName: secret-manager
      containers:
      - name: transform-secret
        image: bitnami/kubectl:latest
        command: ['sh', '-c']
        args:
          - |
            set -e;
            CERT=$(kubectl get secret oci-registry-cert -n production -o jsonpath="{.data.tls\.crt}" | base64 -d | base64);
            echo $CERT;
            kubectl create secret generic transformed_oci_registry_cert -n production --from-literal=tokenAuthRootCertBundle=$CERT --dry-run=client -o yaml | kubectl apply -f -;
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-manager
  namespace: production
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-manager-role
  namespace: production
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "update", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-manager-role-binding
  namespace: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-manager-role
subjects:
- kind: ServiceAccount
  name: secret-manager
  namespace: production
